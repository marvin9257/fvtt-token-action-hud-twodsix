const t={ID:"fvtt-token-action-hud-twodsix"},e={ID:"token-action-hud-core"},i="1.4",s={item:"tokenActionHud.twodsix.item",characteristics:"tokenActionHud.twodsix.characteristics",utility:"tokenActionHud.utility"},n={armor:{id:"armor",name:"tokenActionHud.twodsix.armor",type:"system"},augment:{id:"augment",name:"tokenActionHud.twodsix.augment",type:"system"},characteristics:{id:"characteristics",name:"tokenActionHud.twodsix.characteristics",type:"system"},equipment:{id:"equipment",name:"tokenActionHud.twodsix.equipment",type:"system"},consumable:{id:"consumable",name:"tokenActionHud.twodsix.consumable",type:"system"},backpack:{id:"backpack",name:"tokenActionHud.twodsix.backpack",type:"system"},ship:{id:"ship",name:"tokenActionHud.twodsix.ship",type:"system"},skills:{id:"skills",name:"tokenActionHud.twodsix.skills",type:"system"},spell:{id:"spell",name:"tokenActionHud.twodsix.spell",type:"system"},treasure:{id:"treasure",name:"tokenActionHud.twodsix.treasure",type:"system"},weapons:{id:"weapons",name:"tokenActionHud.twodsix.weapons",type:"system"},combat:{id:"combat",name:"tokenActionHud.combat",type:"system"},token:{id:"token",name:"tokenActionHud.token",type:"system"},tool:{id:"tool",name:"tokenActionHud.twodsix.tool",type:"system"},trait:{id:"trait",name:"tokenActionHud.twodsix.trait",type:"system"},utility:{id:"utility",name:"tokenActionHud.utility",type:"system"}},a={armor:{groupId:"armor"},augment:{groupId:"augment"},backpack:{groupId:"backpack"},consumable:{groupId:"consumable"},computer:{groupId:"equipment"},equipment:{groupId:"equipment"},ship:{groupId:"ship"},skills:{groupId:"skills"},spell:{groupId:"spell"},treasure:{groupId:"treasure"},trait:{groupId:"trait"},tool:{groupId:"equipment"},junk:{groupId:"equipment"},weapon:{groupId:"weapons"}},o={strength:"STR",dexterity:"DEX",endurance:"END",intelligence:"INT",education:"EDU",socialStanding:"SOC",psionicStrength:"PSI",stamina:"STA",lifeblood:"LFB",alternative1:"ALT1",alternative2:"ALT2"};let l=null;Hooks.once("tokenActionHudCoreApiReady",(async e=>{l=class Utils{static getSetting(i,s=null){let n=s??null;try{n=game.settings.get(t.ID,i)}catch{e.api.Logger.debug(`Setting '${i}' not found`)}return n}static async setSetting(i,s){try{s=await game.settings.set(t.ID,i,s),e.api.Logger.debug(`Setting '${i}' set to '${s}'`)}catch{e.api.Logger.debug(`Setting '${i}' not found`)}}}}));let c=null;function shouldDisplayChar(t){const e=game.settings.get("twodsix","showAlternativeCharacteristics");switch(t){case"strength":case"dexterity":case"endurance":case"intelligence":case"education":case"socialStanding":return!0;case"psionicStrength":return"alternate"!==e;case"alternative1":case"alternative2":return"base"!==e;default:return!1}}Hooks.once("tokenActionHudCoreApiReady",(async t=>{c=class ActionHandler extends t.api.ActionHandler{async buildSystemActions(e){if(this.actors=this.actor?[this.actor]:this._getActors(),this.actorType=this.actor?.type,this.displayUnequipped=l.getSetting("displayUnequipped"),this.actor){let e=this.actor.items;e=t.api.Utils.sortItemsByName(e),this.items=e}["traveller","robot","animal"].includes(this.actorType)&&this.#t()}#t(){this.#e(),this.#i()}#s(){}async#e(){if(0===this.items.size)return;const e="item",i=new Map;for(const[t,e]of this.items){let s=e.type;const n="equipped"===e.system.equipped||["skills","trait","spells"].includes(e.type);if(n||this.displayUnequipped){n||(s=e.system.equipped);const a=i.get(s)??new Map;a.set(t,e),i.set(s,a)}}for(const[n,o]of i){const i=a[n]?.groupId;if(!i)continue;const l={id:i,type:"system"},c=[...o].map((([i,n])=>{const a=i,o=n.name,l=t.api.Utils.i18n(s[e]),c=`${l?`${l}: `:""}${o}`,r=[e,a].join(this.delimiter);return{id:a,name:o,img:n.img,listName:c,encodedValue:r}}));this.addActions(c,l)}}async#i(){const e="characteristics",i=[];for(const n in this.actor.system.characteristics){const a=n,o=this.actor.system.characteristics[n].displayShortLabel,l=t.api.Utils.i18n(s[e]),c=`${l?`${l}: `:""}${o}`,r=[e,a].join(this.delimiter);shouldDisplayChar(a)&&i.push({id:a,name:o,listName:c,encodedValue:r})}this.addActions(i,{id:"characteristics",type:"system"})}}}));let r=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{const e=n;Object.values(e).forEach((e=>{e.name=t.api.Utils.i18n(e.name),e.listName=`Group: ${t.api.Utils.i18n(e.listName??e.name)}`}));const i=Object.values(e);r={layout:[{nestId:"inventory",id:"inventory",name:t.api.Utils.i18n("tokenActionHud.twodsix.Inventory"),groups:[{...e.weapons,nestId:"inventory_weapons"},{...e.armor,nestId:"inventory_armor"},{...e.augment,nestId:"inventory_augment"},{...e.equipment,nestId:"inventory_equipment"},{...e.consumable,nestId:"inventory_consumable"},{...e.tool,nestId:"inventory_tool"},{...e.backpack,nestId:"inventory_backpack"},{...e.ship,nestId:"inventory_ship"}]},{nestId:"skills",id:"skills",name:t.api.Utils.i18n("tokenActionHud.twodsix.skills"),groups:[{...e.skills,nestId:"skills_skills"}]},{nestId:"characteristics",id:"characteristics",name:t.api.Utils.i18n("tokenActionHud.twodsix.characteristics"),groups:[{...e.characteristics,nestId:"characteristics_characteristics"}]},{nestId:"trait",id:"trait",name:t.api.Utils.i18n("tokenActionHud.twodsix.trait"),groups:[{...e.trait,nestId:"trait_trait"}]},{nestId:"spell",id:"spell",name:t.api.Utils.i18n("tokenActionHud.twodsix.spell"),groups:[{...e.spell,nestId:"spell_spell"}]},{nestId:"utility",id:"utility",name:t.api.Utils.i18n("tokenActionHud.utility"),groups:[{...e.combat,nestId:"utility_combat"},{...e.token,nestId:"utility_token"},{...e.rests,nestId:"utility_rests"},{...e.utility,nestId:"utility_utility"}]}],groups:i}}));let d=null;function burstAttackDM(t){return null===t?0:t>=100?4:t>=20?3:t>=10?2:t>=3?1:0}function burstBonusDamage(t){return null===t?"0":t>=100?"4d6":t>=20?"3d6":t>=10?"2d6":t>=4?"1d6":t>=3?"1":"0"}function register(e){game.settings.register(t.ID,"displayUnequipped",{name:game.i18n.localize("tokenActionHud.twodsix.settings.displayUnequipped.name"),hint:game.i18n.localize("tokenActionHud.twodsix.settings.displayUnequipped.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:t=>{e(t)}})}Hooks.once("tokenActionHudCoreApiReady",(async t=>{d=class RollHandler extends t.api.RollHandler{async doHandleActionEvent(t,e){const i=e.split("|");2!==i.length&&super.throwInvalidValueErr();const s=i[0],n=i[1];if(["item"].includes(s)&&this.isRenderItem())return this.doRenderItem(this.actor,n);const a=["traveller","animal","robot"];if(this.actor)return void await this.#n(t,this.actor,this.token,s,n);const o=canvas.tokens.controlled.filter((t=>a.includes(t.actor?.type)));for(const e of o){const i=e.actor;await this.#n(t,i,e,s,n)}}async#n(t,e,i,s,n){switch(s){case"item":this.#a(t,e,n);break;case"characteristics":this.#o(t,e,n);break;case"utility":this.#l(i,n)}}#a(t,e,i){const s=e.items.get(i);if("trait"===s.type||"spell"===s.type){const t=`<div style="display: inline-flex;"><img src="${s.img}" alt="" class="chat-image"></img><span style="align-self: center; text-align: center; padding-left: 1ch;"><strong>${s.type.capitalize()}: ${s.name}</strong></span></div><br>${s.system.description}`;ChatMessage.create({content:t,speaker:ChatMessage.getSpeaker({actor:this.actor})})}else"weapon"===s.type?async function resolveUnknownAutoMode(t){let e="";const i=(t.system.rateOfFire??"").split(/[-/]/);switch(game.settings.get("twodsix","autofireRulesUsed")){case"CEL":(function shouldShowCELAutoFireDialog(t){const e=t.system.rateOfFire;return"CEL"===game.settings.get("twodsix","autofireRulesUsed")&&(Number(e)>1||t.system.doubleTap&&game.settings.get("twodsix","ShowDoubleTap"))})(t)&&(e=await async function promptForCELROF(t){return t.system.doubleTap&&game.settings.get("twodsix","ShowDoubleTap")?new Promise((t=>{new Dialog({title:game.i18n.localize("TWODSIX.Dialogs.ROFPickerTitle"),content:"",buttons:{single:{label:game.i18n.localize("TWODSIX.Dialogs.ROFSingle"),callback:()=>{t("")}},doubleTap:{label:game.i18n.localize("TWODSIX.Dialogs.ROFDoubleTap"),callback:()=>{t("double-tap")}}},default:"single"}).render(!0)})):new Promise((t=>{new Dialog({title:game.i18n.localize("TWODSIX.Dialogs.ROFPickerTitle"),content:"",buttons:{single:{label:game.i18n.localize("TWODSIX.Dialogs.ROFSingle"),callback:()=>{t("")}},burst:{label:game.i18n.localize("TWODSIX.Dialogs.ROFBurst"),callback:()=>{t("auto-burst")}},full:{label:game.i18n.localize("TWODSIX.Dialogs.ROFFull"),callback:()=>{t("auto-full")}}},default:"single"}).render(!0)}))}(t)),await t.performAttack(e,!0);break;case"CE":i.length>1?await async function promptAndAttackForCE(t,e){const i={};for(const s of t){const t=Number(s),n=burstAttackDM(t),a=burstBonusDamage(t);if(1===t)i.single={label:game.i18n.localize("TWODSIX.Dialogs.ROFSingle"),callback:()=>{e.performAttack("",!0,1)}};else if(t>1){let s=game.i18n.localize("TWODSIX.Rolls.AttackDM")+" +"+n;i[s]={label:s,callback:()=>{e.performAttack("burst-attack-dm",!0,t)}},s=game.i18n.localize("TWODSIX.Rolls.BonusDamage")+" +"+a,i[s]={label:s,callback:()=>{e.performAttack("burst-bonus-damage",!0,t)}}}}await new Dialog({title:game.i18n.localize("TWODSIX.Dialogs.ROFPickerTitle"),content:"",buttons:i,default:"single"}).render(!0)}(i,t):await t.performAttack("",!0,Number(i[0]));break;default:await t.performAttack(e,!0)}}(s):s.skillRoll(!0)}#o(t,e,i){e.characteristicRoll({rollModifiers:{characteristic:e.system.characteristics[i].shortLabel}},!0)}async#l(t,e){if("endTurn"===e)game.combat?.current?.tokenId===t.id&&await(game.combat?.nextTurn())}}}));let u=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{u=class SystemManager extends t.api.SystemManager{doGetActionHandler(){return new c}getAvailableRollHandlers(){return{core:"Core Twodsix"}}doGetRollHandler(t){let e;return e=new d,e}doRegisterSettings(t){register(t)}async doRegisterDefaultFlags(){return r}}})),Hooks.on("tokenActionHudCoreApiReady",(async()=>{const e=game.modules.get(t.ID);e.api={requiredCoreModuleVersion:"1.4",SystemManager:u},Hooks.call("tokenActionHudSystemReady",e)}));export{s as ACTION_TYPE,c as ActionHandler,o as CHARACTERISTICS,e as CORE_MODULE,r as DEFAULTS,n as GROUP,a as ITEM_TYPE,t as MODULE,i as REQUIRED_CORE_MODULE_VERSION,d as RollHandler,u as SystemManager,l as Utils,register};
